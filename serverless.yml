# NOTE: update this with your service name
service: content-life-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
    eventTable: calendar-test-db
    ideaTable: idea-test-db
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:us-east-1:*:*'

functions:
  createEvent:
    handler: apps/calendar/routes/create.main
    events:
      - http:
          path: events
          method: post
          cors: true
          authorizer: aws_iam
  getEvent:
    handler: apps/calendar/routes/get.main
    events:
      - http:
          path: events/{id}
          method: get
          cors: true
          authorizer: aws_iam
  listEvents:
    handler: apps/calendar/routes/list.main
    events:
      - http:
          path: events
          method: get
          cors: true
          authorizer: aws_iam
  updateEvent:
    handler: apps/calendar/routes/update.main
    events:
      - http:
          path: events/{id}
          method: put
          cors: true
          authorizer: aws_iam
  deleteEvent:
    handler: apps/calendar/routes/delete.main
    events:
      - http:
          path: events/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  createIdea:
    handler: apps/ideas/routes/create.main
    events:
      - http:
          path: ideas
          method: post
          cors: true
          authorizer: aws_iam
  getIdea:
    handler: apps/ideas/routes/get.main
    events:
      - http:
          path: ideas/{id}
          method: get
          cors: true
          authorizer: aws_iam
  listIdeas:
    handler: apps/ideas/routes/list.main
    events:
      - http:
          path: ideas
          method: get
          cors: true
          authorizer: aws_iam
  updateIdea:
    handler: apps/ideas/routes/update.main
    events:
      - http:
          path: ideas/{id}
          method: put
          cors: true
          authorizer: aws_iam
  deleteIdea:
    handler: apps/ideas/routes/delete.main
    events:
      - http:
          path: ideas/{id}
          method: delete
          cors: true
          authorizer: aws_iam
